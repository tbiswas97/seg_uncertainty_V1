import import_utils 
from Session import Session as SSN 
import numpy as np 
import toolbox as tb
import pandas as pd

def get_segments_at_layer(df,im_segmap,layer=0):
    
    Ny,Nx = (320,320)
    
    try:
        im_segmap.set_primary_seg_map(model="c",n_components=4,layer=layer)
    except:  
        im_segmap.set_primary_seg_map(model="a",n_components=4,layer=layer)
        
    if im_segmap.primary_seg_map.shape != (Ny,Nx):
        m = Ny/(im_segmap.primary_seg_map.shape[0])
        im_segmap.primary_seg_map = im_segmap.primary_seg_map.repeat(
            m,0).repeat(m,1)
    
    _map = im_segmap.primary_seg_map
    
    df_labels = ["neuron1_np_coord","neuron2_np_coord"]
    new_labels = ["neuron1_segment","neuron2_segment"]

    coords_list = df.loc[(df.img_idx==im_segmap.iid_idx),df_labels]
    
    segments = {
        k:[
            tb.get_coord_segment(coord,_map) for coord in coords_list[v]
        ] for k,v in zip(new_labels,df_labels)
        
    }
    
    segments_df = pd.DataFrame.from_dict(segments)
    
    segments_df['layer'] = layer
    
    return segments_df

def get_segments_at_im(segmap,df):
    
    segments_all_layers = [get_segments_at_layer(df,segmap,layer=k) for k in [0,1,2,3]]
    
    segments_all_layers_df = pd.concat(segments_all_layers,axis=0,ignore_index=True)
    
    return segments_all_layers_df
    

def get_segments(segmaps,df): 
    
    all_ims = [get_segments_at_im(segmap,df) for segmap in segmaps]
    
    all_ims_df = pd.concat(all_ims,axis=0,ignore_index=True)

    return all_ims_df

#above functions are helper functions for stitch

def stitch(df,segmaps):
    """
    Generates a DataFrame with all Session information coupled with segment info 
    From list of segmaps 

    Parameters:
    ----------------
    df : pd.DataFrame 
        DataFrame generated by Session.get_df()
    segmaps : list of SegmentationMap objects

    Returns:
    ---------
    out : pd.DataFrame
    """
    df_repeated = pd.concat([df]*4,axis=0,ignore_index=True)
    segment_info = get_segments(segmaps,df)
    
    out = pd.concat([df_repeated,segment_info.iloc[:,0:]],axis=1)
    
    return out